{"version":3,"sources":["constants.js","XGrid.js","NewPuzzleForm.js","Toolbar.js","WordList.js","helpers.js","KeyPressHandler.js","Clues.js","Print.js","RebusForm.js","MenuActions.js","reducers/grid.js","reducers/motion.js","App.js","serviceWorker.js","index.js"],"names":["DIRECTION_ACROSS","DIRECTION_DOWN","isDirectionAcross","v","isBlockedSquare","UNDO_ACTION","REDO_ACTION","UPDATE_WORD_TO_CLUE","UPDATE_GRID","SET_CURRENT_WORD","SET_SELECTED_SQUARE","SET_CLUE_FOCUS","Grid","grid","selected","currentWord","hideAnswers","onClick","size","rows","cols","gridItems","Array","keys","map","i","row","Math","floor","column","val","classNames","push","coordinates","some","cn","join","style","fontSize","length","key","className","gridnums","gridTemplateColumns","gridTemplateRows","useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","NewPuzzleForm","onSave","open","setOpen","classes","React","useState","values","setValues","handleClose","save","handleChange","dir","event","Object","assign","target","value","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","label","onChange","type","InputLabelProps","shrink","margin","variant","inputProps","min","max","DialogActions","Button","color","title","backgroundColor","list","width","formatKey","toUpperCase","mod","test","navigator","platform","replace","MenuSection","items","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","item","MenuItem","cb","action","e","dense","ListItemText","primary","ListItemSecondaryAction","FileMenu","actions","handleSavePuzzle","handleImportPuzzle","handleCreateNewPuzzle","EditMenu","handleUndo","handleRedo","InsertMenu","handleInsertRebus","handleInsertBlockedSquare","Toolbar","props","AppBar","position","WORDLIST","memo","words","setWordsState","filtered","setFiltered","debouncedFilter","useCallback","debounce","query","filter","w","match","useEffect","fetch","process","then","resp","text","split","l","startsWith","setWords","RegExp","word","List","slice","ListItem","button","coord2dTo1d","col","valFrom2d","Movement","right","setSelected","left","up","down","height","moveForward","direction","moveBack","this","KeyPressHandler","setRotationalSymettry","handleBackspace","movement","updateGrid","old","handleLetter","k","shiftKey","handleSpace","setCurrentWord","handleLeft","handleRight","handleUp","handleDown","cloneDeep","MOVE_UP","MOVE_LEFT","MOVE_RIGHT","MOVE_DOWN","ENTER_LETTER","BACKSPACE","SPACE","noOutline","outline","KeyPressHandlerComponent","hasFocus","setGridFocus","extraActions","kph","keyPressHandler","keyMap","handlers","forEach","handleFocus","_hasFocus","mousetrap","bind","unbind","ref","forwardRef","onFocus","onBlur","tabIndex","children","focused","decode","input","DOMParser","parseFromString","documentElement","textContent","Clue","clue","clueNum","trim","clueText","disabled","error","focus","clsx","defaultValue","fullWidth","InputProps","onClueFocus","onClueChanged","handleUpdateWord","mapClues","d","toLowerCase","clues","answers","across","container","xs","Typography","PrintView","liStyle","listStyleType","mapClue","marginTop","float","columnCount","padding","RebusForm","onSavePuzzle","onImportPuzzle","onCreateNewPuzzle","onUndo","onRedo","onRebus","openNewForm","setOpenNewForm","openRebusForm","setOpenRebusForm","loadPuzzleRef","useRef","current","click","useImperativeHandle","Fragment","display","MAX_HISTORY","calcNumbersAndAnswers","wordToClue","out","r","num","j","isNewDown","isNewAcross","start","reduceGridState","state","past","history","undo","nextState","previous","newPast","redo","reduceUndo","future","next","newFuture","reduceRedo","payload","reduceUpdateWordToClue","reduceUpdateGrid","Error","currentWordInitialState","reduceMotionState","nextSelected","nextCurrentWord","setSelectedSquare","setClueFocus","root","flexGrow","paddingLeft","paddingRight","paddingTop","paper","scroll","overflow","maxHeight","TabPanel","index","makePuzzle","g","author","editor","copyright","publisher","date","circles","parseWordToClue","newWordToClue","parse","reduce","acc","ww","resetGridState","JSON","localStorage","getItem","initialGridState","gridRef","createRef","ReactiveGrid","setWidth","handleResize","clientWidth","window","addEventListener","removeEventListener","hotKeyRef","App","useTheme","isPrint","setIsPrint","tabValue","handleTabChanged","useReducer","motionState","dispatchMotionStateUpdate","gridState","dispatchGridStateUpdate","menuActionsRef","updateWordToClue","setItem","stringify","nextCw","valFor","x","coordinatesFor","isNotEnd","end","calcCurrentWord","handleClueFocus","handleClueChanged","handleWordListClicked","gridCopy","coord","clsGridPaper","clsScrollPaper","menuActionsComponent","blob","Blob","saveAs","reader","FileReader","onload","result","newGrid","readAsText","files","letter","matchMedia","addListener","matches","onbeforeprint","onafterprint","separateGrid","useMediaQuery","breakpoints","tabs","Paper","gridComponent","_gridComponent","renderedTabs","Tabs","nv","t","Tab","Container","lg","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96c19d5c.chunk.js","sourcesContent":["\nexport const DIRECTION_ACROSS = \"ACROSS\"\nexport const DIRECTION_DOWN = \"DOWN\"\nexport const isDirectionAcross = (v) => v === DIRECTION_ACROSS\n\n\nexport const BLOCKED_SQUARE = '.'\nexport const isBlockedSquare = (v) => v === BLOCKED_SQUARE\n\nexport const UNDO_ACTION = \"UNDO\"\nexport const REDO_ACTION = \"REDO\"\nexport const UPDATE_WORD_TO_CLUE = \"UPDATE_WORD_TO_CLUE\"\nexport const UPDATE_GRID = \"UPDATE_GRID\"\n\nexport const SET_CURRENT_WORD = \"SET_CURRENT_WORD\"\nexport const SET_SELECTED_SQUARE = \"SET_SELECTED_SQUARE\"\nexport const SET_CLUE_FOCUS = \"SET_CLUE_FOCUS\"\n\n","import React from 'react';\nimport './XGrid.css';\nimport { isBlockedSquare }  from './constants';\n\nexport default function Grid({grid, selected, currentWord, hideAnswers, onClick}) {\n  const {rows, cols} = grid.size\n  // go from 0 -> width*height and map to a block in the view\n  const gridItems = [...Array(rows*cols).keys()]\n      .map(i => {\n        const row = Math.floor(i / cols)\n        const column = Math.floor(i % cols)\n        const val =  grid.grid[i]\n        const isSelected = selected && selected.row === row && selected.column === column\n        let classNames = [\"Grid-item\"]\n        if(isSelected) {\n          classNames.push(\"Grid-item-selected\")\n        } else if (isBlockedSquare(val)) {\n          classNames.push(\"Grid-item-blocked\")\n        } else if (currentWord && currentWord.coordinates.some(i => i[0] === row && i[1] === column)) {\n          classNames.push(\"Grid-item-highlight\")\n        }\n        const cn = classNames.join(\" \")\n        const style = {\n          fontSize: `${(1/(val.length))*1.1}em`\n        }\n\n        return (\n          <div key={i} className={cn} onClick={() => onClick({row, column})}>\n            <span className=\"Grid-number\">{grid.gridnums[i] > 0 ? grid.gridnums[i] : ''}</span>\n            <span style={style}>{hideAnswers ? ' ' : val}</span>\n          </div>\n        )\n      })\n\n  return (\n    <div\n      style={{\n        gridTemplateColumns: `repeat(${cols}, 1fr)`,\n        gridTemplateRows: `repeat(${rows}, 1fr)`,\n      }}\n      className=\"Grid-container\"\n    >\n      {gridItems}\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function NewPuzzleForm({onSave, open, setOpen}) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({rows: 15, cols: 15})\n\n  const handleClose = (save) => () => {\n    setOpen(false);\n\n    if(save) {\n      onSave(values)\n    }\n\n  };\n\n  const handleChange = (dir) => (event) => {\n    setValues(Object.assign({}, values, {[dir]: +event.target.value || ''}))\n  }\n\n  return (\n      <Dialog open={open} onClose={handleClose(false)}>\n        <DialogTitle>Create New Puzzle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new puzzle. Warning! This will destroy the current puzzle. Make sure to save first!\n          </DialogContentText>\n          <TextField\n            label=\"Rows\"\n            value={values.rows}\n            onChange={handleChange('rows')}\n            className={classes.textField}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n              min: 1,\n              max: 100\n            }}\n          />\n          <TextField\n            label=\"Columns\"\n            value={values.cols}\n            onChange={handleChange('cols')}\n            className={classes.textField}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n              min: 1,\n              max: 100\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose(true)} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n","import React from 'react';\n\nimport NewPuzzleForm from './NewPuzzleForm'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    backgroundColor: 'rgba(255,255,255,1)'\n  },\n  list: {\n    width: 200, //not sure why this is needed hack for now\n  }\n}));\n\nconst formatKey = (key) => {\n  if (!key) { return key }\n\n  key = key.toUpperCase()\n  const mod = /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? '⌘' : 'Ctrl'\n  key = key.replace('MOD', mod)\n  key = key.replace('SHIFT', '⇧')\n  if(key.length === 3) {\n    key = key.replace('+', '')\n  }\n  return key\n}\n\nfunction MenuSection({title, items}) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  };\n\n  const handleCloseWithCb = cb => e => {\n    cb()\n    handleClose(e)\n  };\n\n\n  return (\n    <div>\n      <Button size=\"small\" onClick={handleClick} >\n        {title}\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left'}}\n        transformOrigin={{ vertical: 'top', horizontal: 'left'}}\n        MenuListProps={{className: classes.list}}\n      >\n        {items.map((item, i) => (\n          <MenuItem key={i} onClick={handleCloseWithCb(item.action)} dense>\n            <ListItemText primary={item.label} />\n            <ListItemSecondaryAction>{formatKey(item.key)}</ListItemSecondaryAction>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n   )\n}\n\nfunction FileMenu({\n  actions: {\n    handleSavePuzzle,\n    handleImportPuzzle,\n    handleCreateNewPuzzle\n  }\n}) {\n  const items = [\n      {\n        label: \"Save Puzzle\",\n        ...handleSavePuzzle,\n      },\n      {\n        label: \"Load Puzzle\",\n        ...handleImportPuzzle,\n      },\n      {\n        label: \"New Puzzle\",\n        ...handleCreateNewPuzzle,\n      }\n  ]\n\n  return <MenuSection title=\"File\" items={items} />\n}\n\nfunction EditMenu({\n  actions: {\n    handleUndo,\n    handleRedo\n  }\n}) {\n  const items = [\n      {\n        label: \"Undo\",\n        ...handleUndo,\n      },\n      {\n        label: \"Redo\",\n        ...handleRedo\n      },\n  ]\n\n  return <MenuSection title=\"Edit\" items={items} />\n}\n\nfunction InsertMenu({\n  actions: {\n    handleInsertRebus,\n    handleInsertBlockedSquare,\n  }\n}) {\n  const items = [\n      {\n        label: \"Rebus\",\n        ...handleInsertRebus,\n      },\n      {\n        label: \"Blocked Square\",\n        ...handleInsertBlockedSquare,\n      },\n  ]\n\n  return <MenuSection title=\"Insert\" items={items} />\n}\n\n\nexport default function Toolbar(props) {\n  const classes = useStyles()\n\n  if(!props.actions) {\n    return null\n  }\n\n  return (\n    <AppBar position=\"static\">\n     <MuiToolbar className={classes.title}>\n        <FileMenu {...props}/>\n        <EditMenu {...props}/>\n        <InsertMenu {...props}/>\n     </MuiToolbar>\n    </AppBar>\n  )\n}\n","import React, { memo, useState, useEffect, useCallback } from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport {debounce} from 'lodash';\n\nlet WORDLIST = null\n\nconst WordList = ({currentWord, onClick}) => {\n  const [words, setWordsState] = useState(WORDLIST || [])\n  const [filtered, setFiltered] = useState([])\n\n  const setWords = (words) => {\n    //cache wordlist incase component unmounts\n    WORDLIST = words\n    setWordsState(words)\n  }\n\n  const debouncedFilter = useCallback(debounce( query => {\n    setFiltered(words.filter(w => w.match(query)))\n  }, 300), [words])\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/wordlist/wordlist.txt`)\n      .then(resp => resp.text())\n      .then(text =>\n          text.split(\"\\n\")\n            .filter(l => !l.startsWith(\"#\")))\n      .then(w => setWords(w))\n  }, [])\n\n  useEffect(() => {\n    debouncedFilter(new RegExp(\"^\"+currentWord.word+\"$\", \"i\"))\n  }, [words, currentWord.word, debouncedFilter])\n\n  const max = 100\n\n  return <div>\n    Words: {filtered.length > max ? `showing ${max}/` : ''}{filtered.length}\n    <List dense>\n      {filtered.slice(0,max).map(w =>\n          <ListItem\n            button\n            onClick={() => onClick(w)}\n            key={w}>\n            {w}\n          </ListItem>\n       )}\n    </List>\n  </div>\n}\n\nexport default memo(WordList)\n","\nexport const coord2dTo1d = (grid, row, col) => (grid.size.cols*row)+col\nexport const valFrom2d = (grid, row, col) => grid.grid[coord2dTo1d(grid, row, col)]\n","import React, { useEffect, useState } from 'react';\nimport {\n  isDirectionAcross,\n  isBlockedSquare,\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n  BLOCKED_SQUARE,\n  UNDO_ACTION,\n  REDO_ACTION\n}  from './constants';\nimport {\ncoord2dTo1d,\nvalFrom2d\n} from './helpers';\n\nimport mousetrap from 'mousetrap'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {cloneDeep} from 'lodash';\n\n\nclass Movement {\n  constructor(props) {\n    const {selected, width, height, currentWord, setSelected} = props\n    this.width = width\n    this.height = height\n    this.selected = selected\n    this.setSelected = setSelected\n    this.currentWord = currentWord\n  }\n\n  right = () => {\n    this.setSelected({\n      row: this.selected.row,\n      column: Math.min(this.width-1, this.selected.column+1)\n    })\n  }\n\n  left = () => {\n    this.setSelected({\n      row: this.selected.row,\n      column: Math.max(0, this.selected.column-1)\n    })\n  }\n  up = () => {\n    this.setSelected({\n      row: Math.max(0, this.selected.row-1),\n      column: this.selected.column\n    })\n  }\n\n  down = () => {\n    this.setSelected({\n      row: Math.min(this.height-1, this.selected.row+1),\n      column: this.selected.column\n    })\n  }\n\n  moveForward = () => {\n    if (isDirectionAcross(this.currentWord.direction)) {\n      this.right()\n    } else {\n      this.down()\n    }\n  }\n  moveBack = () => {\n    if (isDirectionAcross(this.currentWord.direction)) {\n      this.left()\n    } else {\n      this.up()\n    }\n  }\n}\n\nexport class KeyPressHandler {\n  constructor(props) {\n    this.selected = props.selected\n    this.setSelected = props.setSelected\n    this.currentWord = props.currentWord\n    this.setCurrentWord = props.setCurrentWord\n    this.grid = cloneDeep(props.grid)\n    this.updateGrid = props.updateGrid\n    this.rows = props.grid.size.rows\n    this.cols = props.grid.size.cols\n    this.movement = new Movement({\n      width: props.grid.size.cols,\n      height: props.grid.size.rows,\n      setSelected: props.setSelected,\n      currentWord: props.currentWord,\n      selected: props.selected\n    })\n  }\n\n  setRotationalSymettry = (v) => {\n    this.grid.grid[coord2dTo1d(this.grid, this.rows - this.selected.row - 1, this.cols - this.selected.column - 1)] = v\n  }\n\n  handleBackspace = (e) => {\n    const {grid, selected, movement, updateGrid} = this\n\n    const old = valFrom2d(grid, selected.row, selected.column)\n\n    if (isBlockedSquare(old)) {\n      this.setRotationalSymettry('')\n    }\n\n    grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = ''\n\n    movement.moveBack()\n    updateGrid(grid)\n  }\n\n  // This function might get called from rebus without a real event\n  // if there is no \"key\" prop then assume the event is the letter\n  handleLetter = (e) => {\n    let k;\n    if(e.key) {\n      k = e.key.toUpperCase()\n    } else {\n      k = e.toUpperCase()\n    }\n    const {grid, selected, movement, updateGrid} = this\n\n    if(!selected) {\n      return\n    }\n\n    if(k === BLOCKED_SQUARE) {\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = k\n      this.setRotationalSymettry(k)\n      movement.moveForward()\n      updateGrid(grid)\n    } else if (e.shiftKey) {\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] += k\n      updateGrid(grid)\n    } else {\n      const old = valFrom2d(grid, selected.row, selected.column)\n      if (old === k) {\n        // don't issue grid update if its the same letter\n        movement.moveForward()\n        return\n      }\n      if (isBlockedSquare(old)) {\n        this.setRotationalSymettry('')\n      }\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = k\n      movement.moveForward()\n      updateGrid(grid)\n    }\n  }\n\n  handleSpace = (e) => {\n    const {setCurrentWord, currentWord} = this\n    setCurrentWord(Object.assign({}, currentWord, {\n      direction: isDirectionAcross(currentWord.direction) ? DIRECTION_DOWN : DIRECTION_ACROSS\n    }))\n  }\n\n  handleLeft = () => {\n    this.movement.left()\n  }\n\n  handleRight = () => {\n    this.movement.right()\n  }\n\n  handleUp = () => {\n    this.movement.up()\n  }\n\n  handleDown = () => {\n    this.movement.down()\n  }\n\n}\n\nconst MOVE_UP = 'MOVE_UP'\nconst MOVE_LEFT = 'MOVE_LEFT'\nconst MOVE_RIGHT = 'MOVE_RIGHT'\nconst MOVE_DOWN = 'MOVE_DOWN'\nconst ENTER_LETTER = 'ENTER_LETTER'\nconst BACKSPACE = 'BACKSPACE'\nconst SPACE = 'SPACE'\nconst UNDO = 'UNDO'\nconst REDO = 'REDO'\n\n\nconst useStyles = makeStyles(theme => ({\n noOutline: {\n    \"&:focus\": {\n      outline: 0,\n    }\n }\n}))\n\n\nexport default function KeyPressHandlerComponent(props) {\n  const classes = useStyles()\n  const [hasFocus, setGridFocus] = useState(false)\n  const {extraActions, keyPressHandler: kph} = props\n\n  let keyMap = {\n    [MOVE_UP]: 'up',\n    [MOVE_DOWN]: 'down',\n    [MOVE_LEFT]: 'left',\n    [MOVE_RIGHT]: 'right',\n    [ENTER_LETTER]: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".split(''),\n    [BACKSPACE]: ['del', 'backspace'],\n    [SPACE]: 'space',\n  }\n\n  let handlers = {\n    [MOVE_UP]: kph.handleUp,\n    [MOVE_DOWN]: kph.handleDown,\n    [MOVE_LEFT]: kph.handleLeft,\n    [MOVE_RIGHT]: kph.handleRight,\n    [ENTER_LETTER]: kph.handleLetter,\n    [BACKSPACE]: kph.handleBackspace,\n    [SPACE]: kph.handleSpace,\n  }\n\n  if (extraActions) {\n    Object.keys(extraActions).forEach(k => {\n      keyMap[k] = extraActions[k].key\n      handlers[k] = (e) => {\n        extraActions[k].action()\n        // prevent browser form intercepting\n        return false\n      }\n    })\n  }\n\n  const handleFocus = _hasFocus => e => {\n    setGridFocus(_hasFocus)\n  }\n\n  const withFocus = cb => (e) => hasFocus && cb(e)\n\n  useEffect(() => {\n    Object.keys(keyMap).forEach((k) => {\n      mousetrap.bind(keyMap[k], withFocus(handlers[k]))\n    })\n    return () => {\n      Object.keys(keyMap).forEach((k) => {\n        mousetrap.unbind(keyMap[k])\n      })\n    }\n  })\n\n\n  return (\n    <div ref={props.forwardRef} className={classes.noOutline} onFocus={handleFocus(true)} onBlur={handleFocus(false)} tabIndex=\"-1\">\n      {props.children}\n    </div>\n  )\n}\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n}  from './constants';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  // pseudo class to apply when we want to style focus\n  // withouth applying real focus\n  focused: {}\n}));\n\nexport function decode(input)\n{\n  var doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n}\n\nfunction Clue({word, clue, dir, currentWord, onClick, onBlur}) {\n  // how do i make classes generate the right name 'Mui-focused'\n  const classes = useStyles()\n  const clueNum = +clue.match(/^ *[0-9]+/)[0].trim()\n  const clueText = decode(clue.replace(/^ *[0-9]*\\. */, ''))\n  const disabled = word.match(\"_\")\n  const error = !disabled && !clueText.length\n  const focus = currentWord.clueNum === clueNum && currentWord.direction === dir\n  const className = clsx({'Mui-focused': focus})\n  return (\n      <TextField\n        label={`${clueNum}: ${word}`}\n        defaultValue={clueText}\n        type=\"text\"\n        margin=\"dense\"\n        variant=\"outlined\"\n        fullWidth\n        onClick={onClick(dir, clueNum)}\n        onBlur={onBlur(dir, word)}\n        disabled={disabled}\n        error={error}\n        InputLabelProps={{className}}\n        InputProps={{className}}\n      />\n  )\n}\n\nexport default memo(function Clues({grid, currentWord, onClueFocus, onClueChanged}) {\n    const handleFocus = (dir, clueNum) => (e) => {\n      onClueFocus(dir, clueNum)\n    }\n\n    const handleUpdateWord = (dir, word) => e => {\n      onClueChanged(dir, word, e.target.value)\n    }\n\n    const mapClues = (dir) => {\n      const d = dir.toLowerCase()\n      return grid.clues[d].map((clue, i) => {\n        const word = grid.answers[d][i]\n        return <Clue\n          key={`${d}-${i}-${word}`}\n          word={word}\n          clue={clue}\n          dir={dir}\n          currentWord={currentWord}\n            onClick={handleFocus}\n            onBlur={handleUpdateWord}\n        />\n      })\n    }\n\n    const across = mapClues(DIRECTION_ACROSS)\n    const down = mapClues(DIRECTION_DOWN)\n    return (\n      <div>\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <Typography>Across</Typography>\n              {across}\n          </Grid>\n          <Grid item xs>\n            <Typography>Down</Typography>\n              {down}\n          </Grid>\n        </Grid>\n      </div>\n    )\n  })\n","import React from 'react';\n\nimport XGrid from './XGrid'\nimport {decode} from './Clues'\n\n\nexport default function PrintView({grid}) {\n  const ulStyle = {\n    width: 'calc(50vw - 40px)',\n    columnCount: 2,\n    margin: 0,\n    padding: 0,\n  }\n  const liStyle = {\n    margin: 0,\n    listStyleType: 'none',\n  }\n\n  const containerStyle = {\n    marginTop: 40,\n    marginRight: 20,\n    marginLeft: 20,\n    height: \"calc(100vh - 40px)\",\n  }\n\n  const gridStyle = {\n    float: 'right',\n    width: '50vmin',\n    height: '50vmin'\n  }\n\n  const mapClue = (v)  => {\n    const clueNum = +v.match(/^ *[0-9]+/)[0].trim()\n    const clueText = decode(v.replace(/^ *[0-9]*\\. */, ''))\n    return (\n      <li style={liStyle} key={v}>\n        <b style={{marginRight: 2}}>{clueNum}</b>\n        {clueText}\n      </li>\n    )\n  }\n\n  /*\n      */\n  return (\n    <div style={containerStyle}>\n      <div style={gridStyle}>\n        <XGrid grid={grid} hideAnswers={true}/>\n      </div>\n      <ul style={ulStyle}>\n        <li style={liStyle}><b>ACROSS</b></li>\n        {grid.clues.across.map(mapClue)}\n        <li style={liStyle}><b>DOWN</b></li>\n        {grid.clues.down.map(mapClue)}\n      </ul>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function RebusForm({onSave, open, setOpen}) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState('')\n\n  const handleClose = (save) => () => {\n    setOpen(false);\n\n    if(save) {\n      onSave(values)\n    }\n\n  };\n\n  const handleChange = (event) => {\n    setValues(event.target.value.toUpperCase())\n  }\n\n  return (\n      <Dialog open={open} onClose={handleClose(false)}>\n        <DialogTitle>Insert Rebus</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add a rebus\n          </DialogContentText>\n          <TextField\n            label=\"Text\"\n            value={values}\n            onChange={handleChange}\n            className={classes.textField}\n            type=\"text\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose(true)} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n","import React, {forwardRef, useImperativeHandle} from 'react';\nimport NewPuzzleForm from './NewPuzzleForm'\nimport RebusForm from './RebusForm'\n\nimport {BLOCKED_SQUARE} from './constants'\n\n// A hack to get a bunch of dom state into the UI\n// and manage button clicks for menu Actino items and hotkeys\nexport default forwardRef(function MenuActions(props, ref) {\n  const {\n    onSavePuzzle,\n    onImportPuzzle,\n    onCreateNewPuzzle,\n    onUndo,\n    onRedo,\n    onRebus\n  } = props\n\n  const [openNewForm, setOpenNewForm] = React.useState(false);\n  const [openRebusForm, setOpenRebusForm] = React.useState(false);\n  const loadPuzzleRef = React.useRef()\n\n  const handleImportPuzzle = () => {\n    loadPuzzleRef.current.click()\n  }\n  const handleCreateNewPuzzle = () => {\n    setOpenNewForm(true)\n  }\n  const handleInsertRebus = () => {\n    setOpenRebusForm(true)\n  }\n\n  useImperativeHandle(ref, () => ({\n    handleSavePuzzle: {\n      key: 'mod+s',\n      action: onSavePuzzle,\n    },\n    handleImportPuzzle: {\n      key: 'mod+o',\n      action: handleImportPuzzle,\n    },\n    handleCreateNewPuzzle: {\n      key: 'mod+u',\n      action: handleCreateNewPuzzle\n    },\n    handleUndo: {\n      key: 'mod+z',\n      action: onUndo\n    },\n    handleRedo: {\n      key: 'mod+shift+z',\n      action: onRedo\n    },\n    handleInsertRebus: {\n      key: 'mod+i',\n      action: handleInsertRebus\n    },\n    handleInsertBlockedSquare: {\n      key: BLOCKED_SQUARE,\n      action: () => onRebus(BLOCKED_SQUARE)\n    }\n  }))\n\n  return (\n    <React.Fragment>\n      <input\n        ref={loadPuzzleRef}\n        type=\"file\"\n        style={{ display: \"none\" }}\n        onChange={onImportPuzzle}\n      />\n      <NewPuzzleForm\n        open={openNewForm}\n        setOpen={setOpenNewForm}\n        onSave={onCreateNewPuzzle}\n      />\n      <RebusForm\n        open={openRebusForm}\n        setOpen={setOpenRebusForm}\n        onSave={onRebus}\n      />\n    </React.Fragment>\n  )\n})\n","import {\n  isBlockedSquare,\n  UNDO_ACTION,\n  REDO_ACTION,\n  UPDATE_WORD_TO_CLUE,\n  UPDATE_GRID,\n}  from '../constants';\n\nimport { coord2dTo1d, valFrom2d } from '../helpers';\n\nconst MAX_HISTORY = 25\n\nfunction calcNumbersAndAnswers(grid, wordToClue) {\n  const {rows, cols} = grid.size\n  let out = {\n    gridnums: grid.grid.map(r => 0), // clone grid\n    answers: {down: [], across: []},\n    clues: {down: [], across: []}\n  }\n\n  let num = 1;\n  for (let i=0; i<rows; ++i){\n    for (let j=0; j<cols; ++j) {\n      if (isBlockedSquare(valFrom2d(grid, i, j))) continue;\n\n      const isNewDown = (i === 0 || isBlockedSquare(valFrom2d(grid,i-1,j))) && !(i === rows || isBlockedSquare(valFrom2d(grid,i+1,j)))\n      const isNewAcross = (j === 0 || isBlockedSquare(valFrom2d(grid,i,j-1))) && !(j === cols || isBlockedSquare(valFrom2d(grid,i,j+1)))\n      if(isNewAcross || isNewDown) {\n        out.gridnums[coord2dTo1d(grid, i, j)] = num++;\n      }\n\n      if(isNewAcross) {\n        let currentWord = \"\"\n        let start = j;\n        while(!isBlockedSquare(valFrom2d(grid,i,start)) && start < cols) {\n          let w = valFrom2d(grid, i, start)\n          currentWord += w ? w : '_'\n          start++\n        }\n        out.answers.across.push(currentWord)\n        let clue = wordToClue[currentWord] || ''\n        out.clues.across.push(`${num-1}. ${clue}`)\n      }\n\n      if(isNewDown) {\n        let currentWord = \"\"\n        let start = i;\n        while(!isBlockedSquare(valFrom2d(grid,start,j)) && start < rows) {\n          let w = valFrom2d(grid, start, j)\n          currentWord += w ? w : '_'\n          start++\n        }\n        out.answers.down.push(currentWord)\n        let clue = wordToClue[currentWord] || ''\n        out.clues.down.push(`${num-1}. ${clue}`)\n      }\n\n    }\n  }\n\n  return out;\n}\n\nfunction reduceUndo(state, action) {\n  const past = state.history.undo\n\n  if (!past.length) {\n    return state\n  }\n\n  const nextState = {...state}\n  const previous = past[past.length - 1]\n  const newPast = past.slice(0, past.length - 1)\n  nextState.grid = previous\n  nextState.history = {\n    undo: newPast,\n    redo: [state.grid, ...state.history.redo]\n  }\n\n  return nextState\n}\n\nfunction reduceRedo(state, action) {\n  const future = state.history.redo\n\n  if (!future.length) {\n    return state\n  }\n\n  const nextState = {...state}\n  const next = future[0]\n  const newFuture = future.slice(1)\n  nextState.grid = next\n  nextState.history = {\n    undo: [...state.history.undo, state.grid],\n    redo: newFuture\n  }\n\n  return nextState\n}\n\nfunction reduceUpdateWordToClue(state, action) {\n  const wordToClue = {\n    ...state.wordToClue,\n    ...action.payload,\n  }\n\n  const ns = {\n    ...state,\n    grid: {\n      ...state.grid,\n      // Update clues in grid model when the clues change\n      ...calcNumbersAndAnswers(state.grid, wordToClue)\n    },\n    wordToClue\n  }\n  return ns\n}\n\nfunction reduceUpdateGrid(state, action) {\n  const nextState = {...state, ...action.payload}\n  nextState.grid = {...nextState.grid, ...calcNumbersAndAnswers(nextState.grid, nextState.wordToClue)}\n  // since history gets pushed on the the stack slice off the start of the history to keep the size small enough\n  nextState.history.undo = state.history.undo.slice(-MAX_HISTORY)\n  nextState.history.undo.push(state.grid)\n  nextState.history.redo = []\n\n  return nextState\n}\n\nexport function reduceGridState(state, action) {\n  switch(action.type) {\n    case UNDO_ACTION:\n      return reduceUndo(state, action)\n    case REDO_ACTION:\n      return reduceRedo(state, action)\n    case UPDATE_WORD_TO_CLUE:\n      return reduceUpdateWordToClue(state, action)\n    case UPDATE_GRID:\n      return reduceUpdateGrid(state, action)\n    default:\n      throw new Error('Unknown Action Type: ' + action.type)\n  }\n}\n","import {\n  isDirectionAcross,\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n  SET_CURRENT_WORD,\n  SET_SELECTED_SQUARE,\n  SET_CLUE_FOCUS\n}  from '../constants';\n\n\nfunction setCurrentWord(state, action) {\n  return {\n    ...state,\n    currentWord: {\n      ...state.currentWord,\n      ...action.payload\n    }\n  }\n}\n\nfunction setSelectedSquare(state, action) {\n  const {currentWord, selected} = state\n  const nextSelected = action.payload\n  let nextCurrentWord = currentWord\n\n  //swap direction if selected is double clicked\n  if(nextSelected && selected && nextSelected.row === selected.row && nextSelected.column === selected.column) {\n    nextCurrentWord = {\n      ...nextCurrentWord,\n      direction: isDirectionAcross(currentWord.direction) ? DIRECTION_DOWN : DIRECTION_ACROSS\n    }\n  }\n\n  return {\n    ...state,\n    selected: nextSelected,\n    currentWord: nextCurrentWord\n  }\n}\n\nfunction setClueFocus(state, action) {\n  const {direction, selected} = action.payload\n  return {\n    ...state,\n    currentWord: {\n      ...currentWordInitialState(),\n      direction,\n    },\n    selected,\n  }\n}\n\nexport function currentWordInitialState() {\n  return {word: \"\", direction: DIRECTION_ACROSS, coordinates: []}\n}\n\nexport function reduceMotionState(state, action) {\n  switch(action.type) {\n    case SET_CURRENT_WORD:\n      return setCurrentWord(state, action)\n    case SET_SELECTED_SQUARE:\n      return setSelectedSquare(state, action)\n    case SET_CLUE_FOCUS:\n      return setClueFocus(state, action)\n    default:\n      throw new Error('Unknown Action Type: ' + action.type)\n  }\n}\n","import React, { useState, useReducer, useEffect, useCallback, useRef } from 'react';\nimport clsx from 'clsx';\nimport './App.css';\nimport XGrid from './XGrid'\nimport Toolbar from './Toolbar'\nimport WordList from './WordList'\nimport KeyPressHandlerComponent, {KeyPressHandler} from './KeyPressHandler'\nimport Clues from './Clues'\nimport PrintView from './Print'\nimport MenuActions from './MenuActions'\nimport {\n  isDirectionAcross,\n  isBlockedSquare,\n  UNDO_ACTION,\n  REDO_ACTION,\n  UPDATE_WORD_TO_CLUE,\n  UPDATE_GRID,\n  SET_CURRENT_WORD,\n  SET_SELECTED_SQUARE,\n  SET_CLUE_FOCUS,\n}  from './constants';\n\nimport { coord2dTo1d, valFrom2d } from './helpers';\nimport { reduceGridState } from './reducers/grid'\nimport { reduceMotionState, currentWordInitialState } from './reducers/motion'\n\n\nimport { saveAs } from 'file-saver';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport {cloneDeep } from 'lodash';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    paddingTop: 32,\n  },\n  paper: {\n    padding: 10,\n  },\n  scroll: {\n    overflow: \"scroll\",\n    maxHeight: \"calc(100vh - 180px)\",\n  }\n}));\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  let hidden = value !== index\n\n  if (hidden) {\n    return <div></div>\n  }\n\n  return <div>\n    {children}\n  </div>\n}\n\n\nfunction calcCurrentWord({direction, grid, selected}) {\n    if (!selected) { return null }\n\n    const valFor = (x) => isDirectionAcross(direction) ? valFrom2d(grid, selected.row, x) : valFrom2d(grid, x, selected.column)\n    const coordinatesFor = (x) => isDirectionAcross(direction) ? [selected.row, x] : [x, selected.column]\n    const isNotEnd = (end) => isDirectionAcross(direction) ? end < grid.size.cols : end < grid.size.rows\n\n    let start = isDirectionAcross(direction) ? selected.column : selected.row;\n    let end = start\n\n    // Find beginning\n    // Then find end of the word\n    // When convert those values into an string and convert blanks to . for word search\n    // also compile list of coordinates for grid highlighting\n    //  finally set the new state\n    while(start>0 && !isBlockedSquare(valFor(start))) start--;\n    while(isNotEnd(end) && !isBlockedSquare(valFor(end))) end++;\n    if (isBlockedSquare(valFor(start))) start++;\n\n    let word = \"\"\n    let coordinates = []\n    const clueNum = grid.gridnums[coord2dTo1d(grid, coordinatesFor(start)[0], coordinatesFor(start)[1])]\n\n    for(let i=start; i<end; ++i) {\n      let v = valFor(i)\n      if (v === \"\") v = \".\";\n      word += v\n      coordinates.push(coordinatesFor(i))\n    }\n\n    return { word, coordinates, clueNum }\n}\n\n// Format specified by https://www.xwordinfo.com/JSON/\nconst makePuzzle = (size) => {\n  let g = {\n    title: \"TODO: NY Times, Thu, Sep 11, 2008\",\n    author: \"TODO: Caleb Madison\",\n    editor: \"TODO: Will Shortz\",\n    copyright: \"TODO: 2008, The New York Times\",\n    publisher: \"TODO: The New York Times\",\n    date: \"TODO: 9/11/2008\",\n    size,\n    // clues should include number as well e.g. \"1. Waxed\"\n    clues: {\n      across: [],\n      down: []\n    }\n  }\n  return Object.assign(g, {\n    // '.' means black, multiple letters valid for rebus\n    grid: [...Array(g.size.rows*g.size.cols).keys()].map(v => \"\"),\n    // 0 means no number\n    gridnums: [...Array(g.size.rows*g.size.cols).keys()].map(v => 0),\n    // TODO: 0 means circle 1 means circle\n    circles: [...Array(g.size.rows*g.size.cols).keys()].map(v => 0),\n  })\n}\n\nfunction parseWordToClue(grid) {;\n  const newWordToClue = {}\n  if (grid.answers) {\n    const parse = dir => {\n      grid.answers[dir]\n      .filter(w => !w.match('_'))\n      .reduce((acc, w, i) => {\n        let ww = (grid.clues[dir][i] || '').replace(/^ *[0-9]*\\. */, '')\n        acc[w] = ww\n        return acc\n      }, newWordToClue)\n    }\n\n    parse('down')\n    parse('across')\n  }\n\n  return newWordToClue\n}\n\nfunction resetGridState(g) {\n    const grid = g || JSON.parse(localStorage.getItem(\"grid\")) || makePuzzle({rows: 15, cols: 15})\n    const wordToClue = parseWordToClue(grid)\n    const history = JSON.parse(localStorage.getItem(\"history\")) || {undo: [], redo: []}\n\n    return {grid, wordToClue, history}\n}\n\nconst initialGridState = resetGridState()\n\n\nconst gridRef = React.createRef();\nfunction ReactiveGrid({children}) {\n  let [width, setWidth] = useState(\"100%\")\n\n  const handleResize = () => {\n    gridRef.current && setWidth(gridRef.current.clientWidth)\n  }\n\n  useEffect(() => {\n    // add event listener then call function on first render to ensure size is correct\n    window.addEventListener('resize', handleResize)\n    handleResize()\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div ref={gridRef} style={{width: width, height: width}}>\n      {children}\n    </div>\n  )\n}\n\nconst hotKeyRef = React.createRef()\n\n\nfunction App() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [isPrint, setIsPrint] = useState(false)\n  const [tabValue, handleTabChanged] = useState(0)\n  const [motionState, dispatchMotionStateUpdate] = useReducer(reduceMotionState, {selected: null, currentWord: currentWordInitialState()})\n  const [gridState, dispatchGridStateUpdate] = useReducer(reduceGridState, initialGridState)\n  const menuActionsRef = useRef()\n  const {grid, history} = gridState\n\n  const {selected, currentWord} = motionState\n\n\n  const updateGridState = (nextState) => {\n    if (nextState === UNDO_ACTION || nextState === REDO_ACTION) {\n      dispatchGridStateUpdate({type: nextState})\n    } else {\n      dispatchGridStateUpdate({\n        type: UPDATE_GRID,\n        payload: {grid: nextState}\n      })\n    }\n  }\n\n  const updateWordToClue = useCallback((word, clue) => {\n    dispatchGridStateUpdate({\n      type: UPDATE_WORD_TO_CLUE,\n      payload: {\n        [word]: clue\n      }\n    })\n  }, [])\n\n  const setCurrentWord = useCallback((currentWord) => {\n    dispatchMotionStateUpdate({\n      type: SET_CURRENT_WORD,\n      payload: currentWord\n    })\n  }, [])\n\n  const setSelected = useCallback((nextSelected) => {\n    dispatchMotionStateUpdate({\n      type: SET_SELECTED_SQUARE,\n      payload: nextSelected\n    })\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"grid\", JSON.stringify(grid))\n    localStorage.setItem(\"history\", JSON.stringify(history))\n  }, [grid, history])\n\n  useEffect(() => {\n    const nextCw = calcCurrentWord({selected, direction: currentWord.direction, grid})\n    nextCw && setCurrentWord(nextCw)\n  }, [setCurrentWord, selected, grid, currentWord.direction])\n\n\n\n  const handleClueFocus = useCallback((direction, clueNum) => {\n    let selected = {}\n    for(let i=0; i<grid.gridnums.length; ++i) {\n      if(grid.gridnums[i] == clueNum) {\n        const row = Math.floor(i / grid.size.cols)\n        const column = Math.floor(i % grid.size.cols)\n        selected = {\n          row, column\n        }\n        break;\n      }\n    }\n    dispatchMotionStateUpdate({\n      type: SET_CLUE_FOCUS,\n      payload: {\n        direction,\n        selected\n      }\n    })\n  }, [grid])\n\n  const handleClueChanged = useCallback((direction, word, clue) => {\n    updateWordToClue(word, clue)\n  }, [updateWordToClue])\n\n  const handleSavePuzzle = () => {\n    var blob = new Blob([JSON.stringify(grid)], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"puzzle.json\")\n  }\n\n  // TODO handle failure and validate puzzle format\n  const handleImportPuzzle = (e) => {\n    let input = e.target;\n    if (!input.value) {\n      return;\n    }\n\n    let reader = new FileReader();\n    reader.onload = function(){\n      let text = reader.result;\n      const newGrid = JSON.parse(text)\n      dispatchGridStateUpdate({\n        type: UPDATE_GRID,\n        payload: {\n          grid: newGrid,\n          wordToClue: parseWordToClue(newGrid)\n        }\n      })\n    };\n\n    reader.readAsText(input.files[0]);\n    input.value = '';\n  }\n\n  const handleCreateNewPuzzle = (size) => {\n    dispatchGridStateUpdate({\n      type: UPDATE_GRID,\n      payload: resetGridState(makePuzzle(size))\n    })\n    setSelected()\n  }\n\n  const handleWordListClicked = useCallback(word => {\n    const gridCopy = cloneDeep(grid)\n\n    currentWord.coordinates.forEach((coord, i) => {\n      gridCopy.grid[coord2dTo1d(grid, coord[0], coord[1])] = word[i]\n    })\n\n    hotKeyRef.current.focus()\n\n    dispatchGridStateUpdate({\n      type: UPDATE_GRID,\n      payload: {grid: gridCopy}\n    })\n  }, [grid, currentWord])\n\n\n  const clsGridPaper = clsx(classes.paper)\n  const clsScrollPaper = clsx(classes.paper, classes.scroll)\n\n  const keyPressHandler = new KeyPressHandler({\n    selected,\n    setSelected,\n    setCurrentWord,\n    currentWord,\n    grid,\n    updateGrid: updateGridState,\n  })\n\n  const menuActionsComponent = (\n    <MenuActions\n      ref={menuActionsRef}\n      onSavePuzzle={handleSavePuzzle}\n      onImportPuzzle={handleImportPuzzle}\n      onCreateNewPuzzle={handleCreateNewPuzzle}\n      onUndo={() => dispatchGridStateUpdate({type: UNDO_ACTION})}\n      onRedo={() => dispatchGridStateUpdate({type: REDO_ACTION})}\n      onRebus={(letter) => keyPressHandler.handleLetter(letter)}\n    />\n  )\n\n\n  useEffect(() => {\n    const listener = (e) => setIsPrint(e.matches)\n    window.matchMedia(\"print\").addListener(listener)\n    window.onbeforeprint = () => setIsPrint(true)\n    window.onafterprint = () => setIsPrint(false)\n  }, [])\n\n  const separateGrid = useMediaQuery(theme.breakpoints.up('lg'))\n\n  if (isPrint) {\n    return <PrintView grid={grid} />\n  }\n\n  let tabs = [\n    {label: \"Word List\", children: (\n      <Paper className={clsScrollPaper} >\n        <WordList onClick={handleWordListClicked} currentWord={currentWord}/>\n      </Paper>\n    )},\n    {label: \"Clues\", children: (\n      <Paper className={clsScrollPaper} >\n        <Clues currentWord={currentWord} grid={grid} onClueFocus={handleClueFocus} onClueChanged={handleClueChanged}/>\n      </Paper>\n    )},\n  ]\n\n  let gridComponent = null\n\n  const _gridComponent = (\n    <KeyPressHandlerComponent keyPressHandler={keyPressHandler} forwardRef={hotKeyRef} extraActions={menuActionsRef.current}>\n      <Paper className={clsGridPaper} >\n        <ReactiveGrid>\n          <XGrid grid={grid} selected={motionState.selected} currentWord={motionState.currentWord} onClick={setSelected} />\n        </ReactiveGrid>\n      </Paper>\n    </KeyPressHandlerComponent>\n  )\n\n  if (separateGrid) {\n    gridComponent = _gridComponent\n  } else {\n    tabs = [{label: \"Grid\", children: _gridComponent}, ...tabs]\n  }\n\n  const renderedTabs = (\n    <React.Fragment>\n      <Tabs value={tabValue} onChange={(e,nv) => handleTabChanged(nv)}>\n        {tabs.map(t => <Tab key={t.label} label={t.label}/>)}\n      </Tabs>\n      {tabs.map((t,i) => <TabPanel key={t.label} value={tabValue} index={i}>{t.children}</TabPanel>)}\n    </React.Fragment>\n  )\n\n  return (\n    <div className=\"App\">\n      <Toolbar actions={menuActionsRef.current}/>\n      <Container className={classes.container}>\n        <Grid container spacing={2}>\n        { separateGrid && (\n          <Grid item lg={6} >\n            {gridComponent}\n          </Grid>\n        )}\n          <Grid item lg={6}>\n            {renderedTabs}\n          </Grid>\n        </Grid>\n      </Container>\n      {menuActionsComponent}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}